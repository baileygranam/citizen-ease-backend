generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  cases   Case[]
  clients Client[]
  users   User[]
  roles   Role[]

  @@map("businesses")
}

enum TokenType {
  ACCESS
  REFRESH
}

model Case {
  id                String         @id @default(uuid())
  status            CaseStatus
  dueAt             DateTime?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  deletedAt         DateTime?

  business   Business @relation(fields: [businessId], references: [id])
  businessId String

  client   Client @relation(fields: [clientId], references: [id])
  clientId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([id, businessId])
  @@map("cases")
}

enum CaseStatus {
  OPEN
  CLOSED
}

model Client {
  id                String         @id @default(uuid())
  firstName         String
  middleName        String?
  lastName          String?
  email             String?        @unique
  phoneNumber       String?        @unique
  dateOfBirth       DateTime?      @db.Date
  gender            Gender?
  preferredLanguage Language?
  maritalStatus     MartialStatus?
  addressLine1      String?
  addressLine2      String?
  addressCity       String?
  addressState      String?
  addressZipcode    String?
  addressCountry    String?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  deletedAt         DateTime?

  business   Business @relation(fields: [businessId], references: [id])
  businessId String

  cases Case[]

  @@unique([id, businessId])
  @@map("clients")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Language {
  ENGLISH
  SPANISH
  CHINESE
  TAGALOG
  VIETNAMESE
  JAPANESE
  ARABIC
  FRENCH
  ITALIAN
  POLISH
  KOREAN
  RUSSIAN
  PORTUGUESE
  HINDI
}

enum MartialStatus {
  SINGLE
  MARRIED
  DIVORCED
  SEPARATED
  WIDOWED
  DOMESTIC_PARTNERSHIP
  CIVIL_UNION
  ANNULLED
}

model Token {
  id        String    @id @default(uuid())
  type      TokenType
  token     String    @unique
  expiresAt DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model User {
  id          String    @id @default(uuid())
  firstName   String
  lastName    String
  email       String    @unique
  phoneNumber String    @unique
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  business   Business @relation(fields: [businessId], references: [id])
  businessId String

  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  tokens Token[]
  cases  Case[]

  @@unique([id, businessId])
  @@map("users")
}

model Role {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  business   Business @relation(fields: [businessId], references: [id])
  businessId String

  permissions Permission[]
  users       User[]

  @@unique([id, businessId])
  @@map("roles")
}

model Permission {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  scope       String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  roles Role[]

  @@map("permissions")
}
